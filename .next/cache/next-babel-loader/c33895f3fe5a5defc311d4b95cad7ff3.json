{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Modal from \"./projectModal\";\nimport Image from \"./projectImage\";\n\nclass Project extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      modalArray: {\n        imgClassName: \"block\",\n        modalClassName: \"hidden\"\n      }\n    });\n\n    _defineProperty(this, \"handleOpenModal\", () => {\n      // Make a shallow copy of the items\n      let modalArray = this.state.modalArray; // Replace the property you're intested in\n\n      modalArray.modalClassName = \"block \";\n      modalArray.imgClassName = \"hidden\"; // Set the state to our new copy\n\n      this.setState({\n        modalArray\n      });\n    });\n\n    _defineProperty(this, \"handleCloseModal\", () => {\n      // Make a shallow copy of the items\n      let modalArray = this.state.modalArray; // Replace the property you're intested in\n\n      modalArray.modalClassName = \"hidden \";\n      modalArray.imgClassName = \"block \"; // Set the state to our new copy\n\n      this.setState({\n        modalArray\n      });\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: this.state.modalArray.imgClassName\n    }, __jsx(Image, {\n      projectData: this.props.projectData,\n      onOpenModal: this.handleOpenModal\n    })), __jsx(\"div\", {\n      className: this.state.modalArray.modalClassName\n    }, __jsx(Modal, {\n      projectData: this.props.projectData,\n      onCloseModal: this.handleCloseModal\n    })));\n  }\n\n}\n\nexport default Project;","map":null,"metadata":{},"sourceType":"module"}