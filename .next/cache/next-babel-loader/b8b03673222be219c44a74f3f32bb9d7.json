{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Image from \"./levelImage\";\n\nclass Level extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n  }\n\n  render() {\n    var skillName = this.props.skillName;\n    return __jsx(\"div\", null, this.generateLevelImage().map(function (item, i) {\n      return __jsx(Image, {\n        key: skillName + i,\n        name: item\n      });\n    }));\n  }\n\n  generateLevelImage() {\n    var imageRecipe = [];\n    var x = this.props.levelValue;\n\n    if (Number.isInteger(x)) {\n      for (let i = 0; i < 4 - x; i++) {\n        imageRecipe.push(\"empty\");\n      }\n\n      for (let i = 0; i < x; i++) {\n        imageRecipe.push(\"full\");\n      }\n    } else {\n      for (let i = 0; i < 4 - x - 0.5; i++) {\n        imageRecipe.push(\"empty\");\n      }\n\n      imageRecipe.push(\"half\");\n\n      for (let i = 0; i < x - 0.5; i++) {\n        imageRecipe.push(\"full\");\n      }\n    }\n\n    return imageRecipe;\n  }\n\n}\n\nexport default Level;","map":null,"metadata":{},"sourceType":"module"}